1. http://colah.github.io/posts/2015-08-Understanding-LSTMs/  this to be inlcuded as reference.

2. also the 2 pictures, which are the training architecture and prediction architecture to add in the report.

3. What I tried in the project: 

In the project of Human Motion, the architecture we used to solve the problem of motion prediction 
is based on RNN architecture using LSTM networks. We created an unrolled LSTM network that in each time step is being trained 
to predict the next pose. This can be seen also in Figure training_architecture, where the red poses are the predicted poses fromt he LSTM architecture
and the greenones are the ground truths, meaning the real-true positions from the training data.
The loss we used wa sthe L2 loss to minimize. We tried also some other distance functions, like the cosine loss, but this didnt help a lot and the 
vlaidation error was the same or a bit worse compared to the L2 norm, therefore we prefered the L2 loss.
Also we used SGD, stochastic gradient descent and the ADAM optimizer to solve the optimization problem in the training process. We clipped also the 
norms to a factor of 5, so that we limit the magnitude of gradients and the Adam optimizer descends indeed to a minimum.



4. We have to create a table with our parameters learning_rate, number_epochs, batch_size, max length size etc.
5. 
